
import { Navbar } from "@/components/Navbar";
import { Footer } from "@/components/Footer";
import { ChatbotWidget } from "@/components/ChatbotWidget";
import { AppSidebar } from "@/components/AppSidebar";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { ArrowLeft, Info, Zap, Car, Plane, Trash2, User, LogOut, Calculator, TrendingDown, Lightbulb } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";

const inputDefs = [
  { 
    label: "Electricity Usage", 
    key: "electricity", 
    factor: 0.0007, 
    unit: "kWh/month",
    icon: Zap,
    tooltip: "Enter your monthly electricity consumption in kilowatt-hours",
    placeholder: "e.g., 1200"
  },
  { 
    label: "Gas Consumption", 
    key: "gas", 
    factor: 0.0053, 
    unit: "therms/month",
    icon: Info,
    tooltip: "Monthly natural gas usage in therms (1 therm = 100,000 BTU)",
    placeholder: "e.g., 85"
  },
  { 
    label: "Company Vehicles", 
    key: "vehicles", 
    factor: 0.0004, 
    unit: "miles/month",
    icon: Car,
    tooltip: "Total miles driven by company vehicles per month",
    placeholder: "e.g., 2500"
  },
  { 
    label: "Flight Travel", 
    key: "flights", 
    factor: 0.00025, 
    unit: "miles/month",
    icon: Plane,
    tooltip: "Business flight miles traveled per month",
    placeholder: "e.g., 4000"
  },
  { 
    label: "Waste Generated", 
    key: "waste", 
    factor: 0.4, 
    unit: "tons/month",
    icon: Trash2,
    tooltip: "Total waste generated by your company per month",
    placeholder: "e.g., 12"
  },
];

const suggestions = [
  { text: "Switch to renewable energy", reduction: 20, priority: "high" },
  { text: "Optimize business travel", reduction: 12, priority: "medium" },
  { text: "Implement waste management", reduction: 6, priority: "low" },
  { text: "Upgrade to electric vehicles", reduction: 15, priority: "high" },
  { text: "Improve building insulation", reduction: 8, priority: "medium" },
];

const pageVariants = {
  initial: { opacity: 0, x: 100 },
  in: { opacity: 1, x: 0 },
  out: { opacity: 0, x: -100 }
};

const pageTransition = {
  type: "tween",
  ease: "anticipate",
  duration: 0.4
};

export default function CarbonCalculator() {
  const [inputs, setInputs] = useState<Record<string, number>>({});
  const [isCalculating, setIsCalculating] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const navigate = useNavigate();

  const totalEmission = inputDefs.reduce(
    (sum, field) => sum + (Number(inputs[field.key]) || 0) * field.factor,
    0
  );

  const emissionLevel = totalEmission <= 5 ? 'low' : totalEmission <= 15 ? 'medium' : 'high';

  const handleInputChange = (key: string, value: string) => {
    setInputs(prev => ({
      ...prev,
      [key]: value === "" ? 0 : Math.max(0, Number(value))
    }));
  };

  const handleCalculate = async () => {
    setIsCalculating(true);
    // Simulate calculation delay for better UX
    await new Promise(resolve => setTimeout(resolve, 1500));
    setIsCalculating(false);
    setShowResults(true);
  };

  const hasAllInputs = inputDefs.every(field => inputs[field.key] > 0);

  return (
    <SidebarProvider>
      <TooltipProvider>
        <div className="flex min-h-screen w-full bg-gradient-to-br from-green-50 via-blue-50 to-cyan-50 font-sans">
          {/* Sidebar */}
          <AppSidebar />

          {/* Main Content */}
          <div className="flex flex-col flex-1 min-w-0">
            {/* Enhanced Header */}
            <header className="w-full bg-white/90 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-40">
              <div className="flex items-center justify-between px-4 md:px-8 py-4">
                <div className="flex items-center gap-4">
                  <Link
                    to="/dashboard"
                    className="flex items-center gap-2 text-primary hover:text-primary/80 transition-colors group"
                  >
                    <ArrowLeft className="w-5 h-5 group-hover:-translate-x-1 transition-transform" />
                    <span className="hidden sm:inline font-medium">Back to Dashboard</span>
                  </Link>
                  <SidebarTrigger className="md:hidden" />
                  <div className="hidden md:flex items-center gap-2">
                    <Calculator className="w-6 h-6 text-primary" />
                    <h1 className="text-xl font-bold text-gray-900">Carbon Calculator</h1>
                  </div>
                </div>

                {/* Breadcrumbs */}
                <nav className="hidden lg:flex items-center text-sm text-gray-500">
                  <Link to="/dashboard" className="hover:text-primary transition-colors">Dashboard</Link>
                  <span className="mx-2">/</span>
                  <span className="text-gray-900 font-medium">Carbon Calculator</span>
                </nav>

                {/* User Info */}
                <div className="flex items-center gap-3">
                  <div className="hidden sm:flex items-center gap-2 bg-gray-100 px-3 py-2 rounded-lg">
                    <User className="w-4 h-4 text-gray-600" />
                    <span className="text-sm font-medium text-gray-700">jane@acme.com</span>
                  </div>
                  <Button 
                    variant="outline" 
                    size="sm"
                    onClick={() => navigate('/login')}
                    className="flex items-center gap-2"
                  >
                    <LogOut className="w-4 h-4" />
                    <span className="hidden sm:inline">Log Out</span>
                  </Button>
                </div>
              </div>
            </header>

            <motion.main 
              className="flex-1 p-4 md:p-8"
              initial="initial"
              animate="in"
              exit="out"
              variants={pageVariants}
              transition={pageTransition}
            >
              <div className="max-w-7xl mx-auto">
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                  {/* Calculator Form */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.1, duration: 0.5 }}
                  >
                    <Card className="shadow-xl bg-white/95 backdrop-blur-sm">
                      <CardHeader>
                        <CardTitle className="flex items-center gap-2 text-2xl">
                          <Calculator className="w-6 h-6 text-primary" />
                          Carbon Footprint Calculator
                        </CardTitle>
                        <p className="text-gray-600">Enter your company's monthly consumption data</p>
                      </CardHeader>
                      <CardContent className="space-y-6">
                        {inputDefs.map((field, index) => (
                          <motion.div
                            key={field.key}
                            initial={{ opacity: 0, x: -20 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.1 * (index + 1), duration: 0.4 }}
                            className="space-y-2"
                          >
                            <div className="flex items-center gap-2">
                              <field.icon className="w-5 h-5 text-primary" />
                              <label className="font-semibold text-gray-900">{field.label}</label>
                              <Tooltip>
                                <TooltipTrigger>
                                  <Info className="w-4 h-4 text-gray-400 hover:text-gray-600 transition-colors" />
                                </TooltipTrigger>
                                <TooltipContent className="max-w-xs">
                                  <p>{field.tooltip}</p>
                                </TooltipContent>
                              </Tooltip>
                            </div>
                            <div className="relative">
                              <Input
                                type="number"
                                min="0"
                                step="any"
                                value={inputs[field.key] || ""}
                                onChange={e => handleInputChange(field.key, e.target.value)}
                                placeholder={field.placeholder}
                                className="h-12 text-lg pr-20 transition-all duration-200 focus:ring-2 focus:ring-primary/20 focus:scale-[1.02]"
                              />
                              <span className="absolute right-3 top-1/2 -translate-y-1/2 text-sm text-gray-500 font-medium">
                                {field.unit}
                              </span>
                            </div>
                          </motion.div>
                        ))}

                        <motion.div
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: 0.8, duration: 0.4 }}
                        >
                          <Button
                            onClick={handleCalculate}
                            disabled={!hasAllInputs || isCalculating}
                            className="w-full h-12 text-lg font-semibold bg-gradient-to-r from-primary to-primary/80 hover:from-primary/90 hover:to-primary/70 transition-all duration-300 shadow-lg hover:shadow-xl disabled:opacity-50"
                          >
                            {isCalculating ? (
                              <motion.div
                                animate={{ rotate: 360 }}
                                transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                                className="w-5 h-5 border-2 border-white border-t-transparent rounded-full"
                              />
                            ) : (
                              <>
                                <Calculator className="w-5 h-5 mr-2" />
                                Calculate Emissions
                              </>
                            )}
                          </Button>
                        </motion.div>
                      </CardContent>
                    </Card>
                  </motion.div>

                  {/* Results Section */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.2, duration: 0.5 }}
                  >
                    <AnimatePresence mode="wait">
                      {showResults ? (
                        <motion.div
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          exit={{ opacity: 0, scale: 0.9 }}
                          transition={{ duration: 0.5 }}
                          className="space-y-6"
                        >
                          {/* Emissions Result Card */}
                          <Card className="shadow-xl bg-gradient-to-br from-white to-gray-50">
                            <CardHeader>
                              <CardTitle className="text-center text-lg">Estimated Monthly Emissions</CardTitle>
                            </CardHeader>
                            <CardContent className="text-center space-y-4">
                              <motion.div
                                initial={{ scale: 0 }}
                                animate={{ scale: 1 }}
                                transition={{ delay: 0.3, type: "spring", stiffness: 200 }}
                                className="text-5xl md:text-6xl font-bold text-gray-800"
                              >
                                {totalEmission.toFixed(2)}
                                <span className="text-xl md:text-2xl text-gray-600 ml-2">tons CO₂e</span>
                              </motion.div>
                              
                              <div className="space-y-2">
                                <div className="flex justify-between text-sm">
                                  <span>Emission Level</span>
                                  <Badge variant={emissionLevel === 'low' ? 'default' : emissionLevel === 'medium' ? 'secondary' : 'destructive'}>
                                    {emissionLevel.toUpperCase()}
                                  </Badge>
                                </div>
                                <Progress 
                                  value={Math.min(100, (totalEmission / 30) * 100)} 
                                  className="h-3"
                                />
                              </div>
                            </CardContent>
                          </Card>

                          {/* Suggestions Card */}
                          <Card className="shadow-xl bg-gradient-to-br from-green-50 to-emerald-50">
                            <CardHeader>
                              <CardTitle className="flex items-center gap-2 text-emerald-800">
                                <Lightbulb className="w-5 h-5" />
                                Reduction Suggestions
                              </CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-3">
                              {suggestions.map((suggestion, index) => (
                                <motion.div
                                  key={index}
                                  initial={{ opacity: 0, x: 20 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  transition={{ delay: 0.5 + index * 0.1 }}
                                  className="flex items-center justify-between p-3 bg-white rounded-lg shadow-sm hover:shadow-md transition-all cursor-pointer group"
                                  onClick={() => navigate('/dashboard')}
                                >
                                  <div className="flex items-center gap-3">
                                    <TrendingDown className="w-4 h-4 text-emerald-600" />
                                    <span className="font-medium text-gray-700 group-hover:text-emerald-700 transition-colors">
                                      {suggestion.text}
                                    </span>
                                  </div>
                                  <Badge 
                                    variant={suggestion.priority === 'high' ? 'default' : 'secondary'}
                                    className="bg-emerald-100 text-emerald-800"
                                  >
                                    -{suggestion.reduction}%
                                  </Badge>
                                </motion.div>
                              ))}
                              
                              <motion.div
                                initial={{ opacity: 0 }}
                                animate={{ opacity: 1 }}
                                transition={{ delay: 1 }}
                                className="mt-4 p-3 bg-gradient-to-r from-primary/10 to-primary/5 rounded-lg border border-primary/20"
                              >
                                <p className="text-sm text-primary font-semibold">
                                  💡 Want custom guidance? <Link to="/dashboard" className="underline hover:no-underline">Upgrade for AI-driven insights</Link>
                                </p>
                              </motion.div>
                            </CardContent>
                          </Card>
                        </motion.div>
                      ) : (
                        <motion.div
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          className="flex flex-col items-center justify-center h-96 bg-gradient-to-br from-gray-50 to-white rounded-2xl shadow-xl border-2 border-dashed border-gray-200"
                        >
                          <Calculator className="w-16 h-16 text-gray-300 mb-4" />
                          <h3 className="text-xl font-semibold text-gray-600 mb-2">Ready to Calculate</h3>
                          <p className="text-gray-500 text-center max-w-sm">
                            Fill in all the fields and click "Calculate Emissions" to see your carbon footprint results and personalized suggestions.
                          </p>
                        </motion.div>
                      )}
                    </AnimatePresence>
                  </motion.div>
                </div>
              </div>
            </motion.main>

            <Footer />
            <ChatbotWidget />
          </div>
        </div>
      </TooltipProvider>
    </SidebarProvider>
  );
}
